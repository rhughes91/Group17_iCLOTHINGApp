@model Group17_iCLOTHINGApp.Controllers.UserPasswordsController.Account

@{
	ViewBag.Title = "Register";
}

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<hr />

		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.customer.userID, "Username", htmlAttributes: new { @style = "width: 10%;", @class = "control-label col-md-1" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.customer.userID, new { htmlAttributes = new { @oninput = "IsComplete()", @id = "usrnm", @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.customer.userID, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.password, "Password", htmlAttributes: new { @style = "width: 10%;", @class = "control-label col-md-1" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.password, new { htmlAttributes = new { @oninput = "IsComplete()", @id = "pwd", @type = "password", @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.Label("* Confirm Password", htmlAttributes: new { @id = "check-label", @style = "width: 10%; font-style: italic;", @class = "control-label col-md-1" })
			<div class="col-md-10">
				@Html.Editor("Repeat Password", new { htmlAttributes = new { @oninput = "IsComplete()", @id = "pwd-check", @type = "password", @class = "form-control" } })
				@Html.ValidationMessage("Repeat Password", "", new { @class = "text-danger" })
			</div>
		</div>

		<hr />

		<div class="form-group">
			@Html.LabelFor(model => model.customer.customerID, "Screen Name", htmlAttributes: new { @style = "width: 10%;", @class = "control-label col-md-1" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.customer.customerID, new { htmlAttributes = new { @oninput = "IsComplete()", @id = "screen-id", @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.customer.customerID, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.customer.customerName, "Full Name", htmlAttributes: new { @style = "width: 10%;", @class = "control-label col-md-1" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.customer.customerName, new { htmlAttributes = new { @oninput = "IsComplete()", @id = "name", @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.customer.customerName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.customer.customerDOB, "Date of Birth", htmlAttributes: new { @style = "width: 10%;", @class = "control-label col-md-1" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.customer.customerDOB, new { htmlAttributes = new { @onchange = "IsComplete()", @id = "date", @type = "date", @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.customer.customerDOB, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.customer.customerGender, "Gender", htmlAttributes: new { @style = "width: 10%;", @class = "control-label col-md-1" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.customer.customerGender, new { htmlAttributes = new { @oninput = "IsComplete()", @id = "gender", @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.customer.customerGender, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input id="submit-button" type="submit" value="Create" class="btn btn-primary" disabled />
			</div>
		</div>
	</div>

	<script>
		var usernameCompleted = passwordCompleted = idCompleted = nameCompleted = dateCompleted = genderCompleted = false

		function VerifyUsername() {
			var username = document.getElementById("usrnm").value

			usernameCompleted = (username != '')
		}

		function VerifyPassword() {
			var pword = document.getElementById("pwd").value
			var comparison = document.getElementById("pwd-check").value

			passwordCompleted = (pword == comparison && pword != '')
			label = document.getElementById("check-label")
			if (passwordCompleted) {
				label.style.fontStyle = 'normal'
				label.innerHTML = "Confirm Password"
			}
			else {
				label.style.fontStyle = 'italic'
				label.innerHTML = "* Confirm Password"
			}
		}

		function VerifyID() {
			var id = document.getElementById("screen-id").value

			idCompleted = (id != '')
		}

		function VerifyName() {
			var name = document.getElementById("name").value

			nameCompleted = (name != '')
		}

		function VerifyDate() {
			var date = new Date(document.getElementById("date").value)

			dateCompleted = (date.getTime() > (new Date('1900-1-1')).getTime() && date.getTime() < (new Date()).getTime())
		}

		function VerifyGender() {
			var gender = document.getElementById("gender").value

			genderCompleted = (gender != '')
		}

		function IsComplete() {
			VerifyUsername()
			VerifyPassword()
			VerifyID()
			VerifyName()
			VerifyDate()
			VerifyGender()
			document.getElementById("submit-button").disabled = !(usernameCompleted && passwordCompleted && idCompleted && nameCompleted && dateCompleted && genderCompleted);
		}
	</script>
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
